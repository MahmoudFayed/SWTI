{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SWTI documentation The SWTI Library is made out of 4 parts Cursor which is used for printing colorful text on screen Keyboard which is used for detecting user keyboard input Mouse which is used for detecting user mouse input Window which is used for resizing window These four objects have in total about 40 methods to interact with them. Instalation The installation of SWTI library is easy. Download the github repository and copy the folder SWTI/swti to your project folder. It contains header and source code for the library. In your application include a swti header and a source file. Start example This code writes on screen a yellow text and when a colors it when mouse hovers over it. Window.hideBlinking(); Window.hideSelection(); while(!Keyboard.get(VK_ESCAPE)) { if (Mouse.getRows() == 2) Cursor.setColor(LIGHTGREEN); else Cursor.setColor(YELLOW); Cursor.setPosition(5,2); std::cout << \"Start the application\"; Keyboard.wait(30); }","title":"Home"},{"location":"#welcome-to-swti-documentation","text":"The SWTI Library is made out of 4 parts Cursor which is used for printing colorful text on screen Keyboard which is used for detecting user keyboard input Mouse which is used for detecting user mouse input Window which is used for resizing window These four objects have in total about 40 methods to interact with them.","title":"Welcome to SWTI documentation"},{"location":"#instalation","text":"The installation of SWTI library is easy. Download the github repository and copy the folder SWTI/swti to your project folder. It contains header and source code for the library. In your application include a swti header and a source file.","title":"Instalation"},{"location":"#start-example","text":"This code writes on screen a yellow text and when a colors it when mouse hovers over it. Window.hideBlinking(); Window.hideSelection(); while(!Keyboard.get(VK_ESCAPE)) { if (Mouse.getRows() == 2) Cursor.setColor(LIGHTGREEN); else Cursor.setColor(YELLOW); Cursor.setPosition(5,2); std::cout << \"Start the application\"; Keyboard.wait(30); }","title":"Start example"},{"location":"about/","text":"About Contributing You can help me by contributing to the library. If you find a bug, please write it in issues . If you write a code for a new useful function you can add a merge request . Keep in mind the new function has to be usable in any applications and game. Excluding specific functions makes library simple to use. Credits This library is currently maintained by one person. Feel free to contribute . License The library is licensed by MIT License . You can use the code in any application, but without warranty. That means you can make any commercial application with the library but I am not responsible for any crashes and further problems.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#contributing","text":"You can help me by contributing to the library. If you find a bug, please write it in issues . If you write a code for a new useful function you can add a merge request . Keep in mind the new function has to be usable in any applications and game. Excluding specific functions makes library simple to use.","title":"Contributing"},{"location":"about/#credits","text":"This library is currently maintained by one person. Feel free to contribute .","title":"Credits"},{"location":"about/#license","text":"The library is licensed by MIT License . You can use the code in any application, but without warranty. That means you can make any commercial application with the library but I am not responsible for any crashes and further problems.","title":"License"},{"location":"cursor/","text":"Cursor Cursor writes in console window all text. You can change its position and color. It can change color to one of the following 16 different colors. Following example writes colorful Hello world on screen on specified position. Cursor.setPosition(5,2); Cursor.setColor(YELLOW); std::cout << \"Hello world!\" << std::endl;","title":"Cursor"},{"location":"cursor/#cursor","text":"Cursor writes in console window all text. You can change its position and color. It can change color to one of the following 16 different colors. Following example writes colorful Hello world on screen on specified position. Cursor.setPosition(5,2); Cursor.setColor(YELLOW); std::cout << \"Hello world!\" << std::endl;","title":"Cursor"},{"location":"keyboard/","text":"Keyboard Keyboard is a object that checks keyboard keys of keyboard or mouse. It has 5 methods. Examples Following examples show basic usage of the keyboard object. if (Keyboard.getPressed(VK_UP)) // UP arrow was pressed while (Keyboard.get('A')) // While 'A' key is down Full documentation bool Keyboard.get(int key) This function gets current keyboard input bool Keyboard.getPressed(int key) This function gets current keyboard input. bool Keyboard.getReleased(int key) This function gets current keyboard input bool Keyboard.wait(unsigned int ticks) This function waits specified number of ticks. bool Keyboard.waitUser() This function stops the application until user presses any button. Releasing a button doesn't trigger this function.","title":"Keyboard"},{"location":"keyboard/#keyboard","text":"Keyboard is a object that checks keyboard keys of keyboard or mouse. It has 5 methods.","title":"Keyboard"},{"location":"keyboard/#examples","text":"Following examples show basic usage of the keyboard object. if (Keyboard.getPressed(VK_UP)) // UP arrow was pressed while (Keyboard.get('A')) // While 'A' key is down","title":"Examples"},{"location":"keyboard/#full-documentation","text":"","title":"Full documentation"},{"location":"keyboard/#bool-keyboardgetint-key","text":"This function gets current keyboard input","title":"bool Keyboard.get(int key)"},{"location":"keyboard/#bool-keyboardgetpressedint-key","text":"This function gets current keyboard input.","title":"bool Keyboard.getPressed(int key)"},{"location":"keyboard/#bool-keyboardgetreleasedint-key","text":"This function gets current keyboard input","title":"bool Keyboard.getReleased(int key)"},{"location":"keyboard/#bool-keyboardwaitunsigned-int-ticks","text":"This function waits specified number of ticks.","title":"bool Keyboard.wait(unsigned int ticks)"},{"location":"keyboard/#bool-keyboardwaituser","text":"This function stops the application until user presses any button. Releasing a button doesn't trigger this function.","title":"bool Keyboard.waitUser()"},{"location":"mouse/","text":"Mouse Mouse can be used as following example. int mx = Mouse.getColumns(); int my = Mouse.getRows(); if (Keyboard.get(VK_LBUTTON)) Cursor.printChar(mx, my, 'M')","title":"Mouse"},{"location":"mouse/#mouse","text":"Mouse can be used as following example. int mx = Mouse.getColumns(); int my = Mouse.getRows(); if (Keyboard.get(VK_LBUTTON)) Cursor.printChar(mx, my, 'M')","title":"Mouse"},{"location":"window/","text":"Window Window can be used as following example. Window.setFullscreenBorderless(); middle = Window.getColumns()/2; center = Window.getRows()/2;","title":"Window"},{"location":"window/#window","text":"Window can be used as following example. Window.setFullscreenBorderless(); middle = Window.getColumns()/2; center = Window.getRows()/2;","title":"Window"}]}